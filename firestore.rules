rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /chats/{chatId} {
      allow read, write: if request.auth != null &&
        (request.resource.data.participants.hasAny([request.auth.uid]) ||
         resource.data.participants.hasAny([request.auth.uid]));
    }

    match /chats/{chatId}/messages/{messageId} {
      allow read, write: if request.auth != null &&
        get(/databases/$(database)/documents/chats/$(chatId)).data.participants.hasAny([request.auth.uid]);
    }

    match /ratings/{ratingId} {
      allow create: if request.auth != null;
      allow read: if true;
      allow update, delete: if false;
    }

    match /ambassadors/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /credits/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /referrals/{referralId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.referrerId;
      allow read: if request.auth != null;
      allow update, delete: if false;
    }

    match /credit_gifts/{giftId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.from;
      allow read: if request.auth != null &&
        (request.auth.uid == resource.data.from || request.auth.uid == resource.data.to);
      allow update, delete: if false;
    }

    match /matchmaking/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /ads_tracking/{docId} {
      allow read, write: if request.auth != null && 
        request.auth.uid == resource.data.userId;
    }

    match /subscriptions/{subscriptionId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if false;
    }

    match /credit_purchases/{purchaseId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if false;
    }

    match /reports/{reportId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.reporterId;
      allow read: if false;
      allow update, delete: if false;
    }

    match /sessions/{sessionId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if false;
    }

    match /analytics/{document=**} {
      allow read, write: if false;
    }

    // Deny all other documents
    match /{document=**} {
      allow read, write: if false;
    }
  }
}